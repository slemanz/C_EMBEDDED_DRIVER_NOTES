
02_GPIO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005ac  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000740  08000748  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000740  08000740  00010748  2**0
                  CONTENTS
  4 .ARM          00000000  08000740  08000740  00010748  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000740  08000748  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000740  08000740  00010740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000744  08000744  00010744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000748  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000748  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010748  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010778  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000927  00000000  00000000  000107bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000028a  00000000  00000000  000110e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b0  00000000  00000000  00011370  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000078  00000000  00000000  00011420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001358  00000000  00000000  00011498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c17  00000000  00000000  000127f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005077  00000000  00000000  00013407  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001fc  00000000  00000000  00018480  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  0001867c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000728 	.word	0x08000728

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000728 	.word	0x08000728

080001d4 <delay>:
/// when a external button is pressed, turn on a led

#define BTN_PRESSED 0

void delay(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	; (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr
 80001fc:	0007a11f 	.word	0x0007a11f

08000200 <main>:

int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOC;
 8000206:	4b19      	ldr	r3, [pc, #100]	; (800026c <main+0x6c>)
 8000208:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_10;
 800020a:	230a      	movs	r3, #10
 800020c:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800020e:	2301      	movs	r3, #1
 8000210:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000212:	2302      	movs	r3, #2
 8000214:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000216:	2300      	movs	r3, #0
 8000218:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021a:	2300      	movs	r3, #0
 800021c:	74fb      	strb	r3, [r7, #19]



	GPIO_Handle_t GpioButton;

	GpioButton.pGPIOx = GPIOC;
 800021e:	4b13      	ldr	r3, [pc, #76]	; (800026c <main+0x6c>)
 8000220:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000222:	230c      	movs	r3, #12
 8000224:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000226:	2300      	movs	r3, #0
 8000228:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022a:	2302      	movs	r3, #2
 800022c:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800022e:	2300      	movs	r3, #0
 8000230:	723b      	strb	r3, [r7, #8]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000232:	2301      	movs	r3, #1
 8000234:	71fb      	strb	r3, [r7, #7]




	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000236:	2101      	movs	r1, #1
 8000238:	480c      	ldr	r0, [pc, #48]	; (800026c <main+0x6c>)
 800023a:	f000 f843 	bl	80002c4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800023e:	f107 030c 	add.w	r3, r7, #12
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f89c 	bl	8000380 <GPIO_Init>
	GPIO_Init(&GpioButton);
 8000248:	463b      	mov	r3, r7
 800024a:	4618      	mov	r0, r3
 800024c:	f000 f898 	bl	8000380 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_12) == BTN_PRESSED)
 8000250:	210c      	movs	r1, #12
 8000252:	4806      	ldr	r0, [pc, #24]	; (800026c <main+0x6c>)
 8000254:	f000 fa18 	bl	8000688 <GPIO_ReadFromInputPin>
 8000258:	4603      	mov	r3, r0
 800025a:	2b00      	cmp	r3, #0
 800025c:	d1f8      	bne.n	8000250 <main+0x50>
		{
			GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NO_10);
 800025e:	210a      	movs	r1, #10
 8000260:	4802      	ldr	r0, [pc, #8]	; (800026c <main+0x6c>)
 8000262:	f000 fa27 	bl	80006b4 <GPIO_ToggleOutputPin>
			delay(); // debouncing
 8000266:	f7ff ffb5 	bl	80001d4 <delay>
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_12) == BTN_PRESSED)
 800026a:	e7f1      	b.n	8000250 <main+0x50>
 800026c:	40020800 	.word	0x40020800

08000270 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000272:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000274:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000278:	480c      	ldr	r0, [pc, #48]	; (80002ac <LoopForever+0x6>)
  ldr r1, =_edata
 800027a:	490d      	ldr	r1, [pc, #52]	; (80002b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <LoopForever+0xe>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000282:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000284:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000288:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028e:	4a0a      	ldr	r2, [pc, #40]	; (80002b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000290:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <LoopForever+0x16>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000296:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029e:	f000 fa1f 	bl	80006e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a2:	f7ff ffad 	bl	8000200 <main>

080002a6 <LoopForever>:

LoopForever:
  b LoopForever
 80002a6:	e7fe      	b.n	80002a6 <LoopForever>
  ldr   r0, =_estack
 80002a8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b4:	08000748 	.word	0x08000748
  ldr r2, =_sbss
 80002b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002bc:	2000001c 	.word	0x2000001c

080002c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c0:	e7fe      	b.n	80002c0 <ADC_IRQHandler>
	...

080002c4 <GPIO_PeriClockControl>:
 *
 */


void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002c4:	b480      	push	{r7}
 80002c6:	b083      	sub	sp, #12
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	6078      	str	r0, [r7, #4]
 80002cc:	460b      	mov	r3, r1
 80002ce:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002d0:	78fb      	ldrb	r3, [r7, #3]
 80002d2:	2b01      	cmp	r3, #1
 80002d4:	d140      	bne.n	8000358 <GPIO_PeriClockControl+0x94>
	{
		if		(pGPIOx == GPIOA) GPIOA_PCLK_EN();
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a22      	ldr	r2, [pc, #136]	; (8000364 <GPIO_PeriClockControl+0xa0>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x28>
 80002de:	4b22      	ldr	r3, [pc, #136]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a21      	ldr	r2, [pc, #132]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 80002e4:	f043 0301 	orr.w	r3, r3, #1
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
		else if	(pGPIOx == GPIOH) GPIOH_PCLK_EN();
	}else
	{
		// TODO
	}
}
 80002ea:	e035      	b.n	8000358 <GPIO_PeriClockControl+0x94>
		else if	(pGPIOx == GPIOB) GPIOB_PCLK_EN();
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a1f      	ldr	r2, [pc, #124]	; (800036c <GPIO_PeriClockControl+0xa8>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x3e>
 80002f4:	4b1c      	ldr	r3, [pc, #112]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a1b      	ldr	r2, [pc, #108]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 80002fa:	f043 0302 	orr.w	r3, r3, #2
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e02a      	b.n	8000358 <GPIO_PeriClockControl+0x94>
		else if	(pGPIOx == GPIOC) GPIOC_PCLK_EN();
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a1a      	ldr	r2, [pc, #104]	; (8000370 <GPIO_PeriClockControl+0xac>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x54>
 800030a:	4b17      	ldr	r3, [pc, #92]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a16      	ldr	r2, [pc, #88]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 8000310:	f043 0304 	orr.w	r3, r3, #4
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e01f      	b.n	8000358 <GPIO_PeriClockControl+0x94>
		else if	(pGPIOx == GPIOD) GPIOD_PCLK_EN();
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a16      	ldr	r2, [pc, #88]	; (8000374 <GPIO_PeriClockControl+0xb0>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x6a>
 8000320:	4b11      	ldr	r3, [pc, #68]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a10      	ldr	r2, [pc, #64]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 8000326:	f043 0308 	orr.w	r3, r3, #8
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e014      	b.n	8000358 <GPIO_PeriClockControl+0x94>
		else if	(pGPIOx == GPIOE) GPIOE_PCLK_EN();
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a11      	ldr	r2, [pc, #68]	; (8000378 <GPIO_PeriClockControl+0xb4>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x80>
 8000336:	4b0c      	ldr	r3, [pc, #48]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a0b      	ldr	r2, [pc, #44]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 800033c:	f043 0310 	orr.w	r3, r3, #16
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e009      	b.n	8000358 <GPIO_PeriClockControl+0x94>
		else if	(pGPIOx == GPIOH) GPIOH_PCLK_EN();
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a0d      	ldr	r2, [pc, #52]	; (800037c <GPIO_PeriClockControl+0xb8>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d105      	bne.n	8000358 <GPIO_PeriClockControl+0x94>
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a05      	ldr	r2, [pc, #20]	; (8000368 <GPIO_PeriClockControl+0xa4>)
 8000352:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	bf00      	nop
 800035a:	370c      	adds	r7, #12
 800035c:	46bd      	mov	sp, r7
 800035e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000362:	4770      	bx	lr
 8000364:	40020000 	.word	0x40020000
 8000368:	40023800 	.word	0x40023800
 800036c:	40020400 	.word	0x40020400
 8000370:	40020800 	.word	0x40020800
 8000374:	40020c00 	.word	0x40020c00
 8000378:	40021000 	.word	0x40021000
 800037c:	40021c00 	.word	0x40021c00

08000380 <GPIO_Init>:
 *
 * @Note			- none
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000380:	b480      	push	{r7}
 8000382:	b087      	sub	sp, #28
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // temporary register
 8000388:	2300      	movs	r3, #0
 800038a:	617b      	str	r3, [r7, #20]

	// 1. configure the mode of the gpio pin
	
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	795b      	ldrb	r3, [r3, #5]
 8000390:	2b03      	cmp	r3, #3
 8000392:	d820      	bhi.n	80003d6 <GPIO_Init+0x56>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	795b      	ldrb	r3, [r3, #5]
 8000398:	461a      	mov	r2, r3
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	791b      	ldrb	r3, [r3, #4]
 800039e:	005b      	lsls	r3, r3, #1
 80003a0:	fa02 f303 	lsl.w	r3, r2, r3
 80003a4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	681a      	ldr	r2, [r3, #0]
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	791b      	ldrb	r3, [r3, #4]
 80003b0:	005b      	lsls	r3, r3, #1
 80003b2:	2103      	movs	r1, #3
 80003b4:	fa01 f303 	lsl.w	r3, r1, r3
 80003b8:	43db      	mvns	r3, r3
 80003ba:	4619      	mov	r1, r3
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	400a      	ands	r2, r1
 80003c2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // setting
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	6819      	ldr	r1, [r3, #0]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	697a      	ldr	r2, [r7, #20]
 80003d0:	430a      	orrs	r2, r1
 80003d2:	601a      	str	r2, [r3, #0]
 80003d4:	e0af      	b.n	8000536 <GPIO_Init+0x1b6>
	}else
	{
		//1. configure interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	795b      	ldrb	r3, [r3, #5]
 80003da:	2b04      	cmp	r3, #4
 80003dc:	d117      	bne.n	800040e <GPIO_Init+0x8e>
		{
			// configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003de:	4b40      	ldr	r3, [pc, #256]	; (80004e0 <GPIO_Init+0x160>)
 80003e0:	68db      	ldr	r3, [r3, #12]
 80003e2:	687a      	ldr	r2, [r7, #4]
 80003e4:	7912      	ldrb	r2, [r2, #4]
 80003e6:	4611      	mov	r1, r2
 80003e8:	2201      	movs	r2, #1
 80003ea:	408a      	lsls	r2, r1
 80003ec:	4611      	mov	r1, r2
 80003ee:	4a3c      	ldr	r2, [pc, #240]	; (80004e0 <GPIO_Init+0x160>)
 80003f0:	430b      	orrs	r3, r1
 80003f2:	60d3      	str	r3, [r2, #12]

			// good practice: clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f4:	4b3a      	ldr	r3, [pc, #232]	; (80004e0 <GPIO_Init+0x160>)
 80003f6:	689b      	ldr	r3, [r3, #8]
 80003f8:	687a      	ldr	r2, [r7, #4]
 80003fa:	7912      	ldrb	r2, [r2, #4]
 80003fc:	4611      	mov	r1, r2
 80003fe:	2201      	movs	r2, #1
 8000400:	408a      	lsls	r2, r1
 8000402:	43d2      	mvns	r2, r2
 8000404:	4611      	mov	r1, r2
 8000406:	4a36      	ldr	r2, [pc, #216]	; (80004e0 <GPIO_Init+0x160>)
 8000408:	400b      	ands	r3, r1
 800040a:	6093      	str	r3, [r2, #8]
 800040c:	e035      	b.n	800047a <GPIO_Init+0xfa>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	795b      	ldrb	r3, [r3, #5]
 8000412:	2b05      	cmp	r3, #5
 8000414:	d117      	bne.n	8000446 <GPIO_Init+0xc6>
			// configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000416:	4b32      	ldr	r3, [pc, #200]	; (80004e0 <GPIO_Init+0x160>)
 8000418:	689b      	ldr	r3, [r3, #8]
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	7912      	ldrb	r2, [r2, #4]
 800041e:	4611      	mov	r1, r2
 8000420:	2201      	movs	r2, #1
 8000422:	408a      	lsls	r2, r1
 8000424:	4611      	mov	r1, r2
 8000426:	4a2e      	ldr	r2, [pc, #184]	; (80004e0 <GPIO_Init+0x160>)
 8000428:	430b      	orrs	r3, r1
 800042a:	6093      	str	r3, [r2, #8]

			// good practice: clear corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042c:	4b2c      	ldr	r3, [pc, #176]	; (80004e0 <GPIO_Init+0x160>)
 800042e:	68db      	ldr	r3, [r3, #12]
 8000430:	687a      	ldr	r2, [r7, #4]
 8000432:	7912      	ldrb	r2, [r2, #4]
 8000434:	4611      	mov	r1, r2
 8000436:	2201      	movs	r2, #1
 8000438:	408a      	lsls	r2, r1
 800043a:	43d2      	mvns	r2, r2
 800043c:	4611      	mov	r1, r2
 800043e:	4a28      	ldr	r2, [pc, #160]	; (80004e0 <GPIO_Init+0x160>)
 8000440:	400b      	ands	r3, r1
 8000442:	60d3      	str	r3, [r2, #12]
 8000444:	e019      	b.n	800047a <GPIO_Init+0xfa>


		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	795b      	ldrb	r3, [r3, #5]
 800044a:	2b05      	cmp	r3, #5
 800044c:	d115      	bne.n	800047a <GPIO_Init+0xfa>
		{
			// configure both (FTSR and RTSR)
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800044e:	4b24      	ldr	r3, [pc, #144]	; (80004e0 <GPIO_Init+0x160>)
 8000450:	689b      	ldr	r3, [r3, #8]
 8000452:	687a      	ldr	r2, [r7, #4]
 8000454:	7912      	ldrb	r2, [r2, #4]
 8000456:	4611      	mov	r1, r2
 8000458:	2201      	movs	r2, #1
 800045a:	408a      	lsls	r2, r1
 800045c:	4611      	mov	r1, r2
 800045e:	4a20      	ldr	r2, [pc, #128]	; (80004e0 <GPIO_Init+0x160>)
 8000460:	430b      	orrs	r3, r1
 8000462:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000464:	4b1e      	ldr	r3, [pc, #120]	; (80004e0 <GPIO_Init+0x160>)
 8000466:	68db      	ldr	r3, [r3, #12]
 8000468:	687a      	ldr	r2, [r7, #4]
 800046a:	7912      	ldrb	r2, [r2, #4]
 800046c:	4611      	mov	r1, r2
 800046e:	2201      	movs	r2, #1
 8000470:	408a      	lsls	r2, r1
 8000472:	4611      	mov	r1, r2
 8000474:	4a1a      	ldr	r2, [pc, #104]	; (80004e0 <GPIO_Init+0x160>)
 8000476:	430b      	orrs	r3, r1
 8000478:	60d3      	str	r3, [r2, #12]
		}

		// 2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	089b      	lsrs	r3, r3, #2
 8000480:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	791b      	ldrb	r3, [r3, #4]
 8000486:	f003 0303 	and.w	r3, r3, #3
 800048a:	74bb      	strb	r3, [r7, #18]

		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	4a14      	ldr	r2, [pc, #80]	; (80004e4 <GPIO_Init+0x164>)
 8000492:	4293      	cmp	r3, r2
 8000494:	d032      	beq.n	80004fc <GPIO_Init+0x17c>
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	4a13      	ldr	r2, [pc, #76]	; (80004e8 <GPIO_Init+0x168>)
 800049c:	4293      	cmp	r3, r2
 800049e:	d01d      	beq.n	80004dc <GPIO_Init+0x15c>
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	4a11      	ldr	r2, [pc, #68]	; (80004ec <GPIO_Init+0x16c>)
 80004a6:	4293      	cmp	r3, r2
 80004a8:	d016      	beq.n	80004d8 <GPIO_Init+0x158>
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	4a10      	ldr	r2, [pc, #64]	; (80004f0 <GPIO_Init+0x170>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d00f      	beq.n	80004d4 <GPIO_Init+0x154>
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a0e      	ldr	r2, [pc, #56]	; (80004f4 <GPIO_Init+0x174>)
 80004ba:	4293      	cmp	r3, r2
 80004bc:	d008      	beq.n	80004d0 <GPIO_Init+0x150>
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4a0d      	ldr	r2, [pc, #52]	; (80004f8 <GPIO_Init+0x178>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d101      	bne.n	80004cc <GPIO_Init+0x14c>
 80004c8:	2307      	movs	r3, #7
 80004ca:	e018      	b.n	80004fe <GPIO_Init+0x17e>
 80004cc:	2300      	movs	r3, #0
 80004ce:	e016      	b.n	80004fe <GPIO_Init+0x17e>
 80004d0:	2304      	movs	r3, #4
 80004d2:	e014      	b.n	80004fe <GPIO_Init+0x17e>
 80004d4:	2303      	movs	r3, #3
 80004d6:	e012      	b.n	80004fe <GPIO_Init+0x17e>
 80004d8:	2302      	movs	r3, #2
 80004da:	e010      	b.n	80004fe <GPIO_Init+0x17e>
 80004dc:	2301      	movs	r3, #1
 80004de:	e00e      	b.n	80004fe <GPIO_Init+0x17e>
 80004e0:	40013c00 	.word	0x40013c00
 80004e4:	40020000 	.word	0x40020000
 80004e8:	40020400 	.word	0x40020400
 80004ec:	40020800 	.word	0x40020800
 80004f0:	40020c00 	.word	0x40020c00
 80004f4:	40021000 	.word	0x40021000
 80004f8:	40021c00 	.word	0x40021c00
 80004fc:	2300      	movs	r3, #0
 80004fe:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000500:	4b5e      	ldr	r3, [pc, #376]	; (800067c <GPIO_Init+0x2fc>)
 8000502:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000504:	4a5d      	ldr	r2, [pc, #372]	; (800067c <GPIO_Init+0x2fc>)
 8000506:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800050a:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = (portcode << (temp2*4));
 800050c:	7c7a      	ldrb	r2, [r7, #17]
 800050e:	7cbb      	ldrb	r3, [r7, #18]
 8000510:	009b      	lsls	r3, r3, #2
 8000512:	fa02 f103 	lsl.w	r1, r2, r3
 8000516:	4a5a      	ldr	r2, [pc, #360]	; (8000680 <GPIO_Init+0x300>)
 8000518:	7cfb      	ldrb	r3, [r7, #19]
 800051a:	3302      	adds	r3, #2
 800051c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]


		// 3. enable the exti interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000520:	4b58      	ldr	r3, [pc, #352]	; (8000684 <GPIO_Init+0x304>)
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	687a      	ldr	r2, [r7, #4]
 8000526:	7912      	ldrb	r2, [r2, #4]
 8000528:	4611      	mov	r1, r2
 800052a:	2201      	movs	r2, #1
 800052c:	408a      	lsls	r2, r1
 800052e:	4611      	mov	r1, r2
 8000530:	4a54      	ldr	r2, [pc, #336]	; (8000684 <GPIO_Init+0x304>)
 8000532:	430b      	orrs	r3, r1
 8000534:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 8000536:	2300      	movs	r3, #0
 8000538:	617b      	str	r3, [r7, #20]

	// 2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	799b      	ldrb	r3, [r3, #6]
 800053e:	461a      	mov	r2, r3
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	791b      	ldrb	r3, [r3, #4]
 8000544:	005b      	lsls	r3, r3, #1
 8000546:	fa02 f303 	lsl.w	r3, r2, r3
 800054a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	689a      	ldr	r2, [r3, #8]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	791b      	ldrb	r3, [r3, #4]
 8000556:	005b      	lsls	r3, r3, #1
 8000558:	2103      	movs	r1, #3
 800055a:	fa01 f303 	lsl.w	r3, r1, r3
 800055e:	43db      	mvns	r3, r3
 8000560:	4619      	mov	r1, r3
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	400a      	ands	r2, r1
 8000568:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	6899      	ldr	r1, [r3, #8]
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	697a      	ldr	r2, [r7, #20]
 8000576:	430a      	orrs	r2, r1
 8000578:	609a      	str	r2, [r3, #8]
	temp = 0;
 800057a:	2300      	movs	r3, #0
 800057c:	617b      	str	r3, [r7, #20]


	// 3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	79db      	ldrb	r3, [r3, #7]
 8000582:	461a      	mov	r2, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	005b      	lsls	r3, r3, #1
 800058a:	fa02 f303 	lsl.w	r3, r2, r3
 800058e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	68da      	ldr	r2, [r3, #12]
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	005b      	lsls	r3, r3, #1
 800059c:	2103      	movs	r1, #3
 800059e:	fa01 f303 	lsl.w	r3, r1, r3
 80005a2:	43db      	mvns	r3, r3
 80005a4:	4619      	mov	r1, r3
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	400a      	ands	r2, r1
 80005ac:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	68d9      	ldr	r1, [r3, #12]
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	697a      	ldr	r2, [r7, #20]
 80005ba:	430a      	orrs	r2, r1
 80005bc:	60da      	str	r2, [r3, #12]
	temp = 0;
 80005be:	2300      	movs	r3, #0
 80005c0:	617b      	str	r3, [r7, #20]


	// 4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	7a1b      	ldrb	r3, [r3, #8]
 80005c6:	461a      	mov	r2, r3
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	fa02 f303 	lsl.w	r3, r2, r3
 80005d0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	685a      	ldr	r2, [r3, #4]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	4619      	mov	r1, r3
 80005de:	2301      	movs	r3, #1
 80005e0:	408b      	lsls	r3, r1
 80005e2:	43db      	mvns	r3, r3
 80005e4:	4619      	mov	r1, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	400a      	ands	r2, r1
 80005ec:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	6859      	ldr	r1, [r3, #4]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	697a      	ldr	r2, [r7, #20]
 80005fa:	430a      	orrs	r2, r1
 80005fc:	605a      	str	r2, [r3, #4]
	temp = 0;
 80005fe:	2300      	movs	r3, #0
 8000600:	617b      	str	r3, [r7, #20]


	// 5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	795b      	ldrb	r3, [r3, #5]
 8000606:	2b02      	cmp	r3, #2
 8000608:	d132      	bne.n	8000670 <GPIO_Init+0x2f0>
	{
		uint32_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	791b      	ldrb	r3, [r3, #4]
 800060e:	08db      	lsrs	r3, r3, #3
 8000610:	b2db      	uxtb	r3, r3
 8000612:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	791b      	ldrb	r3, [r3, #4]
 8000618:	f003 0307 	and.w	r3, r3, #7
 800061c:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0x0F << (4*temp2));
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	68fa      	ldr	r2, [r7, #12]
 8000624:	3208      	adds	r2, #8
 8000626:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800062a:	68bb      	ldr	r3, [r7, #8]
 800062c:	009b      	lsls	r3, r3, #2
 800062e:	210f      	movs	r1, #15
 8000630:	fa01 f303 	lsl.w	r3, r1, r3
 8000634:	43db      	mvns	r3, r3
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4011      	ands	r1, r2
 800063e:	68fa      	ldr	r2, [r7, #12]
 8000640:	3208      	adds	r2, #8
 8000642:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	68fa      	ldr	r2, [r7, #12]
 800064c:	3208      	adds	r2, #8
 800064e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	7a5b      	ldrb	r3, [r3, #9]
 8000656:	4619      	mov	r1, r3
 8000658:	68bb      	ldr	r3, [r7, #8]
 800065a:	009b      	lsls	r3, r3, #2
 800065c:	fa01 f303 	lsl.w	r3, r1, r3
 8000660:	4619      	mov	r1, r3
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	4311      	orrs	r1, r2
 8000668:	68fa      	ldr	r2, [r7, #12]
 800066a:	3208      	adds	r2, #8
 800066c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000670:	bf00      	nop
 8000672:	371c      	adds	r7, #28
 8000674:	46bd      	mov	sp, r7
 8000676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800067a:	4770      	bx	lr
 800067c:	40023800 	.word	0x40023800
 8000680:	40013800 	.word	0x40013800
 8000684:	40013c00 	.word	0x40013c00

08000688 <GPIO_ReadFromInputPin>:
 * @Note			- none
 *
 */

uint8_t  GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000688:	b480      	push	{r7}
 800068a:	b085      	sub	sp, #20
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	460b      	mov	r3, r1
 8000692:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x01);
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	691a      	ldr	r2, [r3, #16]
 8000698:	78fb      	ldrb	r3, [r7, #3]
 800069a:	fa22 f303 	lsr.w	r3, r2, r3
 800069e:	b2db      	uxtb	r3, r3
 80006a0:	f003 0301 	and.w	r3, r3, #1
 80006a4:	73fb      	strb	r3, [r7, #15]

	return value;
 80006a6:	7bfb      	ldrb	r3, [r7, #15]
}
 80006a8:	4618      	mov	r0, r3
 80006aa:	3714      	adds	r7, #20
 80006ac:	46bd      	mov	sp, r7
 80006ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006b2:	4770      	bx	lr

080006b4 <GPIO_ToggleOutputPin>:
 * @Note			- none
 *
 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006b4:	b480      	push	{r7}
 80006b6:	b083      	sub	sp, #12
 80006b8:	af00      	add	r7, sp, #0
 80006ba:	6078      	str	r0, [r7, #4]
 80006bc:	460b      	mov	r3, r1
 80006be:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	695b      	ldr	r3, [r3, #20]
 80006c4:	78fa      	ldrb	r2, [r7, #3]
 80006c6:	2101      	movs	r1, #1
 80006c8:	fa01 f202 	lsl.w	r2, r1, r2
 80006cc:	405a      	eors	r2, r3
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	615a      	str	r2, [r3, #20]
}
 80006d2:	bf00      	nop
 80006d4:	370c      	adds	r7, #12
 80006d6:	46bd      	mov	sp, r7
 80006d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006dc:	4770      	bx	lr
	...

080006e0 <__libc_init_array>:
 80006e0:	b570      	push	{r4, r5, r6, lr}
 80006e2:	4d0d      	ldr	r5, [pc, #52]	; (8000718 <__libc_init_array+0x38>)
 80006e4:	4c0d      	ldr	r4, [pc, #52]	; (800071c <__libc_init_array+0x3c>)
 80006e6:	1b64      	subs	r4, r4, r5
 80006e8:	10a4      	asrs	r4, r4, #2
 80006ea:	2600      	movs	r6, #0
 80006ec:	42a6      	cmp	r6, r4
 80006ee:	d109      	bne.n	8000704 <__libc_init_array+0x24>
 80006f0:	4d0b      	ldr	r5, [pc, #44]	; (8000720 <__libc_init_array+0x40>)
 80006f2:	4c0c      	ldr	r4, [pc, #48]	; (8000724 <__libc_init_array+0x44>)
 80006f4:	f000 f818 	bl	8000728 <_init>
 80006f8:	1b64      	subs	r4, r4, r5
 80006fa:	10a4      	asrs	r4, r4, #2
 80006fc:	2600      	movs	r6, #0
 80006fe:	42a6      	cmp	r6, r4
 8000700:	d105      	bne.n	800070e <__libc_init_array+0x2e>
 8000702:	bd70      	pop	{r4, r5, r6, pc}
 8000704:	f855 3b04 	ldr.w	r3, [r5], #4
 8000708:	4798      	blx	r3
 800070a:	3601      	adds	r6, #1
 800070c:	e7ee      	b.n	80006ec <__libc_init_array+0xc>
 800070e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000712:	4798      	blx	r3
 8000714:	3601      	adds	r6, #1
 8000716:	e7f2      	b.n	80006fe <__libc_init_array+0x1e>
 8000718:	08000740 	.word	0x08000740
 800071c:	08000740 	.word	0x08000740
 8000720:	08000740 	.word	0x08000740
 8000724:	08000744 	.word	0x08000744

08000728 <_init>:
 8000728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800072a:	bf00      	nop
 800072c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800072e:	bc08      	pop	{r3}
 8000730:	469e      	mov	lr, r3
 8000732:	4770      	bx	lr

08000734 <_fini>:
 8000734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000736:	bf00      	nop
 8000738:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800073a:	bc08      	pop	{r3}
 800073c:	469e      	mov	lr, r3
 800073e:	4770      	bx	lr
